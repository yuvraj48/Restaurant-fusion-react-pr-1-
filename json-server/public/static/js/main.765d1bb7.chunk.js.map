{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/HomeComponent.js","components/DishDetailComponent.js","components/MenuComponent.js","components/ContactComponent.js","components/HeaderComponent.js","components/FooterComponent.js","components/AboutComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/leaders.js","redux/promotions.js","redux/forms.js","App.js","redux/ConfigureStore.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderCard","item","isLoading","errMess","in","transformProps","exitTransform","Card","CardImg","src","image","alt","name","CardBody","CardTitle","designation","CardSubtitle","CardText","description","Home","props","dish","dishesLoading","dishesErrMess","promotion","promoLoading","promoErrMess","leader","leaderLoading","leaderErrMess","required","val","length","maxLength","len","CommentForm","state","isModalOpen","toggleModal","bind","handleSubmit","this","setState","values","postComment","dishId","rating","author","comment","Button","outline","onClick","Modal","isOpen","ModalHeader","ModalBody","onSubmit","Row","Label","for","md","Col","select","model","htmlFor","text","id","placeholder","validators","minLength","show","messages","resize","rows","type","value","color","Component","RenderComments","comments","map","key","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","RenderDish","top","DishDetail","Breadcrumb","BreadcrumbItem","to","active","RenderMenuItem","width","CardImgOverlay","Menu","menu","dishes","isNumber","isNaN","Number","validEmail","test","Contact","resetFeedbackForm","postFeedback","firstname","lastname","telnum","email","agree","contactType","message","href","role","size","offset","check","checkbox","textarea","Header","toggleNav","isNavOpen","Navbar","dark","expand","NavbarToggler","NavbarBrand","height","Collapse","navbar","Nav","NavItem","Jumbotron","Footer","About","RenderLeader","Media","left","object","body","heading","RenderContent","leaders","CardHeader","title","list","addComment","payload","leadersLoading","leadersFailed","errmess","addLeaders","commentsFailed","promosLoading","promosFailed","addPromos","promos","dishesFailed","addDishes","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","TransitionGroup","CSSTransition","location","classNames","timeout","path","component","filter","featured","dishErrMess","promotions","promo","exact","match","parseInt","params","commentsErrMess","withRouter","connect","dispatch","newComment","toISOString","fetch","method","JSON","stringify","headers","credentials","then","response","ok","error","Error","status","statusText","json","catch","console","log","alert","actions","reset","newFeedback","Dishes","action","Comments","concat","Leaders","errMes","Promotions","InitialFeedback","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.765d1bb7.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return(\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading . . .</p>\r\n        </div>\r\n    );\r\n};","export const baseUrl = 'http://localhost:3001/';\r\n","import React from 'react';\r\nimport { Card, CardImg, CardText, CardBody,\r\n    CardTitle, CardSubtitle} from 'reactstrap';\r\n    import { Loading } from './LoadingComponent';\r\n    import { baseUrl } from '../shared/baseUrl';\r\n    import { FadeTransform } from 'react-animation-components';\r\n \r\n\r\nfunction RenderCard({item,isLoading,errMess}) {\r\n\r\n    if (isLoading) {\r\n        return(\r\n                <Loading />\r\n        );\r\n    }\r\n    else if (errMess) {\r\n        return(\r\n                <h4>{errMess}</h4>\r\n        );\r\n    }\r\n    else \r\n        return(\r\n            <FadeTransform\r\n            in\r\n            transformProps={{\r\n                exitTransform: 'scale(0.5) translateY(-50%)'\r\n            }}>\r\n            <Card>\r\n                <CardImg src={baseUrl + item.image} alt={item.name} />\r\n                <CardBody>\r\n                <CardTitle>{item.name}</CardTitle>\r\n                {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null }\r\n                <CardText>{item.description}</CardText>\r\n                </CardBody>\r\n            </Card>\r\n        </FadeTransform>\r\n        );\r\n}\r\n\r\nfunction Home(props) {\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row align-items-start\">\r\n                <div className=\"col-12 col-md m-1\">\r\n                <RenderCard item={props.dish} \r\n                isLoading={props.dishesLoading}\r\n                 errMess={props.dishesErrMess} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                <RenderCard item={props.promotion} \r\n                isLoading={props.promoLoading}\r\n                 errMess={props.promoErrMess} />\r\n                \r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                <RenderCard item={props.leader} \r\n                isLoading={props.leaderLoading}\r\n                 errMess={props.leaderErrMess} />\r\n               </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React,{Component} from 'react';\r\nimport { Card, CardImg, CardText, CardBody,\r\n    CardTitle, Breadcrumb, BreadcrumbItem,Modal,ModalHeader,ModalBody,Button ,Row,Label,Col} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length < len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\n\r\n\r\nclass CommentForm extends Component{\r\n    constructor(props){\r\n        super(props);\r\n           \r\n    \r\n\r\n    this.state={\r\n        isModalOpen:false\r\n    };\r\n    \r\nthis.toggleModal=this.toggleModal.bind(this);\r\nthis.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n}\r\ntoggleModal(){\r\nthis.setState({\r\n  \r\n   isModalOpen: !this.state.isModalOpen\r\n});\r\n}\r\nhandleSubmit(values) {\r\n\r\n    this.toggleModal();\r\n\r\n    this.props.postComment(this.props.dishId, values.rating, values.author, values.comment)\r\n}\r\n\r\n\r\nrender(){\r\n return(\r\n     <div className=\"Container\">\r\n       <Button outline onClick={this.toggleModal}>Submit Comment</Button>\r\n\r\n                <Modal isOpen={this.state.isModalOpen} >\r\n                    <ModalHeader >Submit Comment</ModalHeader>\r\n<ModalBody>\r\n<LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label for=\"rating\" md={12}>rating</Label>\r\n                                <Col md={12}>\r\n                                    <Control.select model=\".rating\" name=\"rating\" className=\"form-control\">\r\n                                        <option>1</option>\r\n                                        <option>2</option>\r\n                                        <option>3</option>\r\n                                        <option>4</option>\r\n                                        <option>5</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"author\" md={12}>Your Name</Label>\r\n                                <Col md={12}>\r\n                                <Control.text model=\".author\" id=\"author\" name=\"author\" \r\n                                    placeholder=\"Author\" \r\n                                    className=\"form-control\" \r\n                                    validators={{\r\n                                        required,\r\n                                        minLength: minLength(3),\r\n                                        maxLength: maxLength(15)\r\n                                    }} \r\n                                />\r\n                                <Errors className=\"text-danger\" model=\".author\" show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'Required',\r\n                                        minLength: 'Should have more than 3 Characters',\r\n                                        maxLength: 'Should have 15 or less Characters'\r\n                                    }}\r\n                                />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"feedback\" md={12}>Your feedback</Label>\r\n                                <Col md={12}>\r\n                                <Control.text model=\".comment\" id=\"comment\" name=\"comment\" \r\n                                    resize=\"none\"\r\n                                    rows=\"12\" \r\n                                    className=\"form-control\" \r\n                                    validators={{\r\n                                        required,\r\n                                    }} \r\n                                />\r\n                                <Errors className=\"text-danger\" model=\".comment\" show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'Required'\r\n                                    }}\r\n                                />\r\n                                </Col>\r\n                            </Row>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Submit</Button>                            \r\n                        </LocalForm>\r\n</ModalBody>\r\n</Modal>\r\n</div>\r\n )\r\n}\r\n}\r\n\r\nfunction RenderComments({comments, postComment, dishId}){\r\n          if(comments!=null)  {\r\n       return(\r\n        \r\n        <div className=\"col-12 col-md-12 m-1\">\r\n            <h4>comments</h4>\r\n            <ul className=\"list-unstyled\">\r\n                \r\n            <Stagger in>\r\n                        {comments.map((comment) => {\r\n                            return (\r\n                                <Fade in>\r\n                                    <Card className='col-md-5 ml-5'>\r\n                                <li key={comment.id}>\r\n                                <p>{comment.comment}</p>\r\n                                <p>-- {comment.author} , {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))}</p>\r\n                                </li>\r\n                                </Card>\r\n                                </Fade>\r\n                            );\r\n                        })}\r\n                        </Stagger>\r\n          \r\n            </ul> \r\n            <CommentForm  dishId={dishId} postComment={postComment} />\r\n\r\n            </div>\r\n        \r\n            \r\n            \r\n        );\r\n            \r\n            }\r\n          else{\r\n              return(\r\n                  <div></div>\r\n              );\r\n          }\r\n        }\r\n        \r\n\r\n       function RenderDish({dish}){\r\n            if(dish!=null)\r\n            {\r\n                return(\r\n                    <FadeTransform\r\n                    in\r\n                    transformProps={{\r\n                        exitTransform: 'scale(0.5) translateY(-50%)'\r\n                    }}>\r\n                <Card>\r\n                    <CardImg className=\"col-md-4\"top src={baseUrl + dish.image} alt={dish.name} />\r\n                    <CardBody>\r\n                        <CardTitle>{dish.name}</CardTitle>\r\n                        <CardText>{dish.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n                </FadeTransform>\r\n                );\r\n            }\r\n            else\r\n            {\r\n                return(\r\n                <div></div>\r\n                );\r\n            }\r\n        }\r\n            const DishDetail= (props)=>{\r\n                if (props.isLoading) {\r\n                    return(\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">            \r\n                                <Loading />\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                }\r\n                else if (props.errMess) {\r\n                    return(\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">            \r\n                                <h4>{props.errMess}</h4>\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                }\r\n                else if (props.dish != null) \r\n                \r\n        \r\n            if(props.dish!=null){\r\n                return (\r\n                    <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem><Link to='/menu'>Menu</Link></BreadcrumbItem>\r\n                            <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                        <div className=\"col-12\">\r\n                            <h3>{props.dish.name}</h3>\r\n                            <hr />\r\n                        </div>                \r\n                    </div>\r\n                    <div className=\"row\">\r\n                        \r\n                            <RenderDish dish={props.dish} />                      \r\n\r\n      <RenderComments comments={props.comments}\r\n        postComment={props.postComment}\r\n        dishId={props.dish.id}\r\n      />\r\n\r\n                        </div>\r\n                    </div>\r\n                    \r\n                );\r\n            }\r\n            else{\r\n                return(\r\n                    <div></div>\r\n                );\r\n                }\r\n                \r\n            }\r\n          \r\n    export default DishDetail;\r\n\r\n\r\n\r\n\r\n\r\n","import { Card, CardImg, CardImgOverlay,\r\n    CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport React from'react';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\n    function RenderMenuItem ({dish, onClick}) {\r\n        return (\r\n            <Card>\r\n                <Link to={`/menu/${dish.id}`} >\r\n                <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n                    <CardImgOverlay>\r\n                        <CardTitle>{dish.name}</CardTitle>\r\n                    </CardImgOverlay>\r\n                </Link>\r\n            </Card>\r\n        );\r\n    }\r\n\r\n   const Menu =(props)=> {\r\n    const menu= props.dishes.dishes.map((dish) =>{\r\n        return(\r\n                <div key={dish.id} className=\"col-12 col-md-5 m-1 card\">\r\n                <RenderMenuItem dish={dish}/>\r\n                     </div>\r\n        );\r\n        });\r\n        if (props.dishes.isLoading) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">            \r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (props.dishes.errMess) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\"> \r\n                        <div className=\"col-12\">\r\n                            <h4>{props.dishes.errMess}</h4>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>Menu</h3>\r\n                    <hr />\r\n                </div>                \r\n            </div>\r\n            <div className=\"row\">\r\n                {menu}\r\n            </div>\r\n        </div>\r\n    );\r\n    \r\n    \r\n\r\n\r\n}\r\n    \r\n\r\nexport default Menu;\r\n\r\n\r\n\r\n","import React,{Component}from 'react';\r\nimport { Breadcrumb, BreadcrumbItem,\r\n    Button,  Label,  Col,Row } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, Form, Errors,  } from 'react-redux-form';\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        \r\n            this.handleSubmit = this.handleSubmit.bind(this);\r\n        \r\n    }\r\n  \r\n    \r\n    handleSubmit(values) {\r\n        this.props.resetFeedbackForm();\r\n    this.props.postFeedback(\r\n      values.firstname,\r\n      values.lastname,\r\n      values.telnum,\r\n      values.email,\r\n      values.agree,\r\n      values.contactType,\r\n      values.message\r\n    );\r\n    }\r\n\r\n    render(){\r\n    return(\r\n        \r\n        <div className=\"container\">\r\n            \r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>Contact Us</h3>\r\n                    <hr />\r\n                </div>                \r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                <h3>Location Information</h3>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                        Shop No 31, DDA Shopping Complex, Block B<br/>\r\n                    Naraina Industrial Area Phase 1<br />\r\n                    New Delhi, Delhi 110028 <br />\r\n                     \r\n                        <i className=\"fa fa-phone\"></i>: +919671804916<br />\r\n                        <i className=\"fa fa-fax\"></i>: +91 981766460<br />\r\n                        <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                        </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                    <h5>Map of our Location</h5>\r\n                </div>\r\n                <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                    <div className=\"btn-group\" role=\"group\">\r\n                        <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                        <a role=\"button\" className=\"btn btn-info\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                        <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                   <div className=\"col-12\">\r\n                      <h3>Send us your Feedback</h3>\r\n                   </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                    <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                          \r\n\r\n                    <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                        />\r\n                                        <Errors\r\n                                            className=\"text-danger\"\r\n                                            model=\".lastname\"\r\n                                            show=\"touched\"\r\n                                            messages={{\r\n                                                required: 'Required',\r\n                                                minLength: 'Must be greater than 2 characters',\r\n                                                maxLength: 'Must be 15 characters or less'\r\n                                            }}\r\n                                         />\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"form-group\">\r\n                                    <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                    <Col md={10}>\r\n                                        <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                            placeholder=\"Tel. Number\"\r\n                                            className=\"form-control\"\r\n                                            validators={{\r\n                                                required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                            }}\r\n                                             />\r\n                                        <Errors\r\n                                            className=\"text-danger\"\r\n                                            model=\".telnum\"\r\n                                            show=\"touched\"\r\n                                            messages={{\r\n                                                required: 'Required',\r\n                                                minLength: 'Must be greater than 2 numbers',\r\n                                                maxLength: 'Must be 15 numbers or less',\r\n                                                isNumber: 'Must be a number'\r\n                                            }}\r\n                                         />\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"form-group\">\r\n                                    <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                    <Col md={10}>\r\n                                        <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                            placeholder=\"Email\"\r\n                                            className=\"form-control\"\r\n                                            validators={{\r\n                                                required, validEmail\r\n                                            }}\r\n                                             />\r\n                                        <Errors\r\n                                            className=\"text-danger\"\r\n                                            model=\".email\"\r\n                                            show=\"touched\"\r\n                                            messages={{\r\n                                                required: 'Required',\r\n                                                validEmail: 'Invalid Email Address'\r\n                                            }}\r\n                                         />\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"form-group\">\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                                className=\"form-check-input\"\r\n                                                 /> {' '}\r\n                                                <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                        className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                    Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                    </Form>\r\n\r\n                    </div>\r\n               </div>\r\n\r\n            </div>\r\n        \r\n          );\r\n}\r\n}\r\nexport default Contact;","import { Nav, Navbar, NavbarBrand, NavbarToggler, Collapse, NavItem, Jumbotron } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport React,{Component} from 'react';\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.state = {\r\n          isNavOpen: false\r\n        };\r\n      }\r\n\r\n      toggleNav() {\r\n        this.setState({\r\n          isNavOpen: !this.state.isNavOpen\r\n        });\r\n      }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Navbar dark expand=\"md\">\r\n                    <div className=\"container\">\r\n                        <NavbarToggler onClick={this.toggleNav} />\r\n                        <NavbarBrand className=\"mr-auto\" href=\"/\"><img src='assets/images/logo.png' height=\"30\" width=\"41\" alt='Restaurant Fusion' /></NavbarBrand>\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                            <Nav navbar>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\"  to='/home'><span className=\"fa fa-home fa-lg\"></span> Home</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to='/aboutus'><span className=\"fa fa-info fa-lg\"></span> About Us</NavLink>\r\n                                </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\"  to='/menu'><span className=\"fa fa-list fa-lg\"></span> Menu</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to='/contactus'><span className=\"fa fa-address-card fa-lg\"></span> Contact Us</NavLink>\r\n                            </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </div>\r\n                </Navbar>\r\n                <Jumbotron>\r\n                    <div className=\"container\">\r\n                        <div className=\"row row-header\">\r\n                            <div className=\"col-12 col-sm-6\">\r\n                                <h1>Restaurant Fusion</h1>\r\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Header;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Footer(props) {\r\n    return(\r\n    <div className=\"footer\">\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-4 offset-1 col-sm-2\">\r\n                    <h5>Links</h5>\r\n                    <ul className=\"list-unstyled\">\r\n                    <li><Link to='/home'>Home</Link></li>\r\n                        <li><Link to='/aboutus'>About Us</Link></li>\r\n                        <li><Link to='/menu'>Menu</Link></li>\r\n                        <li><Link to='/contactus'>Contact Us</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-7 col-sm-5\">\r\n                    <h5>Our Address</h5>\r\n                    <address>\r\n                    Shop No 31, DDA Shopping Complex, Block B<br/>\r\n                    Naraina Industrial Area Phase 1<br />\r\n                    New Delhi, Delhi 110028 <br />\r\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +918712345678<br />\r\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +918287654321<br />\r\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                         confusion@food.net</a>\r\n                    </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 align-self-center\">\r\n                    <div className=\"text-center\">\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-auto\">\r\n                    <p>© Copyright 2018 Restaurant Fusion</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from \"react\";\r\nimport {Breadcrumb,BreadcrumbItem,Card,CardBody,CardHeader,Media} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { baseUrl } from \"../shared/baseUrl\";\r\nimport { Loading } from \"./LoadingComponent\";\r\nimport { Fade, Stagger } from \"react-animation-components\";\r\n\r\n\r\n\r\n// Getting value\r\nfunction About(props) {\r\n  function RenderLeader({ leader }) {\r\n    return (\r\n      <Media className=\"mt-5\">\r\n        <Media left className=\"mr-5\">\r\n          <Media object src={baseUrl + leader.image} alt={leader.name} />\r\n        </Media>\r\n        <Media body>\r\n          <Media heading>{leader.name}</Media>\r\n          <p>{leader.designation}</p>\r\n          {leader.description}\r\n        </Media>\r\n      </Media>\r\n    );\r\n  }\r\n\r\n  function RenderContent({ leaders, isLoading, errMess }) {\r\n    if (isLoading) {\r\n      return <Loading />;\r\n    } else if (errMess) {\r\n      return <h4>{errMess}</h4>;\r\n    } else\r\n      return (\r\n        <Stagger in>\r\n          {props.leaders.map(leader => (\r\n            <Fade in key={leader.id}>\r\n              <RenderLeader key={leader.id} leader={leader} />\r\n            </Fade>\r\n          ))}\r\n        </Stagger>\r\n      );\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <Breadcrumb>\r\n          <BreadcrumbItem>\r\n            <Link to=\"/home\">Home</Link>\r\n          </BreadcrumbItem>\r\n          <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n        </Breadcrumb>\r\n        <div className=\"col-12\">\r\n          <h3>About Us</h3>\r\n          <hr />\r\n        </div>\r\n      </div>\r\n      <div className=\"row row-content\">\r\n        <div className=\"col-12 col-md-6\">\r\n          <h2>Our History</h2>\r\n          <p>\r\n            Started in 2010, Ristorante con Fusion quickly established itself as\r\n            a culinary icon par excellence in Hong Kong. With its unique brand\r\n            of world fusion cuisine that can be found nowhere else, it enjoys\r\n            patronage from the A-list clientele in Hong Kong. Featuring four of\r\n            the best three-star Michelin chefs in the world, you never know what\r\n            will arrive on your plate the next time you visit us.\r\n          </p>\r\n          <p>\r\n            The restaurant traces its humble beginnings to{\" \"}\r\n            <em>The Frying Pan</em>, a successful chain started by our CEO, Mr.\r\n            Peter Pan, that featured for the first time the world's best\r\n            cuisines in a pan.\r\n          </p>\r\n        </div>\r\n        <div className=\"col-12 col-md-5\">\r\n          <Card>\r\n            <CardHeader className=\"bg-primary text-white\">\r\n              Facts At a Glance\r\n            </CardHeader>\r\n            <CardBody>\r\n              <dl className=\"row p-1\">\r\n                <dt className=\"col-6\">Started</dt>\r\n                <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                <dt className=\"col-6\">Major Stake Holder</dt>\r\n                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                <dd className=\"col-6\">$1,250,375</dd>\r\n                <dt className=\"col-6\">Employees</dt>\r\n                <dd className=\"col-6\">40</dd>\r\n              </dl>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n        <div className=\"col-12\">\r\n          <Card>\r\n            <CardBody className=\"bg-faded\">\r\n              <blockquote className=\"blockquote\">\r\n                <p className=\"mb-0\">\r\n                  You better cut the pizza in four pieces because I'm not hungry\r\n                  enough to eat six.\r\n                </p>\r\n                <footer className=\"blockquote-footer\">\r\n                  Yogi Berra,\r\n                  <cite title=\"Source Title\">\r\n                    The Wit and Wisdom of Yogi Berra, P. Pepe, Diversion Books,\r\n                    2014\r\n                  </cite>\r\n                </footer>\r\n              </blockquote>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n      <div className=\"row row-content\">\r\n        <div className=\"col-12\">\r\n          <h2>Corporate Leadership</h2>\r\n        </div>\r\n        <div className=\"col-12\">\r\n          <Media list>\r\n            <RenderContent\r\n              leaders={props.leader}\r\n              isLoading={props.leaderLoading}\r\n              errMess={props.leaderErrMess}\r\n            />\r\n          </Media>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;","import * as ActionTypes from './ActionTypes';\r\n\r\nimport {baseUrl} from '../shared/baseUrl'\r\n\r\nexport const addComment = (comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: comment\r\n});\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n\r\n    const newComment = {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment\r\n    };\r\n    newComment.date = new Date().toISOString();\r\n    \r\n    return fetch(baseUrl + 'comments', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newComment),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            throw error;\r\n      })\r\n    .then(response => response.json())\r\n    .then(response => dispatch(addComment(response)))\r\n    .catch(error =>  { console.log('post comments', error.message); alert('Your comment could not be posted\\nError: '+error.message); });\r\n};\r\nexport const fetchDishes = () => (dispatch) => {\r\n\r\n    dispatch(dishesLoading(true));\r\n\r\n    return fetch(baseUrl + 'dishes')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error; \r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(dishes => dispatch(addDishes(dishes)))\r\n    .catch(error => dispatch(dishesFailed(error.message)));\r\n}\r\n\r\n\r\nexport const fetchComments = () => (dispatch) => {    \r\n    return fetch(baseUrl + 'comments')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(comments => dispatch(addComment(comments)))\r\n    .catch(error => dispatch(commentsFailed(error.message)));\r\n};\r\nexport const fetchLeaders = () => dispatch => {\r\n  dispatch(leadersLoading());\r\n\r\n  return fetch(baseUrl + \"leaders\")\r\n    .then(\r\n      response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error(\r\n            \"Error \" + response.status + \": \" + response.statusText\r\n          );\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n      }\r\n    )\r\n    .then(response => response.json())\r\n    .then(leaders => dispatch(addLeaders(leaders)))\r\n    .catch(error => dispatch(leadersFailed(error.message)));\r\n};\r\nexport const leadersLoading = () => ({\r\n  type: ActionTypes.LEADERS_LOADING\r\n});\r\n\r\nexport const leadersFailed = errmess => ({\r\n  type: ActionTypes.LEADERS_FAILED,\r\n  payload: errmess\r\n});\r\n\r\nexport const addLeaders = leaders => ({\r\n  type: ActionTypes.ADD_LEADERS,\r\n  payload: leaders\r\n});\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\n\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n    \r\n    dispatch(promosLoading());\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(promos => dispatch(addPromos(promos)))\r\n    .catch(error => dispatch(promosFailed(error.message)));\r\n}\r\n\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\nexport const postFeedback = (\r\n  firstname,\r\n  lastname,\r\n  telnum,\r\n  email,\r\n  agree,\r\n  contactType,\r\n  message\r\n) => dispatch => {\r\n  const newFeedback = {\r\n    firstname: firstname,\r\n    lastname: lastname,\r\n    telnum: telnum,\r\n    email: email,\r\n    agree: agree,\r\n    contactType: contactType,\r\n    message: message\r\n  };\r\n\r\n  return fetch(baseUrl + \"feedback\", {\r\n    method: \"POST\",\r\n    body: JSON.stringify(newFeedback),\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    credentials: \"same-origin\"\r\n  })\r\n    .then(\r\n      response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error(\r\n            \"Error \" + response.status + \": \" + response.statusText\r\n          );\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n        throw error;\r\n      }\r\n    )\r\n    .then(response => response.json())\r\n    .then(response =>\r\n      alert(\"Thank you for your feedback!\" + JSON.stringify(response))\r\n    )\r\n    .catch(error => {\r\n      console.log(\"post feedbacks\", error.message);\r\n      alert(\"Your feedback could not be posted\\nError: \" + error.message);\r\n    });\r\n\r\n}","export const ADD_COMMENT ='ADD_COMMENT';\r\nexport const DISHES_LOADING ='DISHES_LOADING';\r\nexport const DISHES_FAILED ='DISHES_FAILED';\r\nexport const ADD_DISHES='ADD_DISHES';\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\nexport const LEADERS_LOADING='LEADER_LOADING';\r\nexport const ADD_LEADERS= 'ADD_LEADERS';\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED';","\r\nimport Home from './HomeComponent';\r\nimport React, { Component } from 'react';\r\nimport DishDetail from './DishDetailComponent';\r\nimport Menu from './MenuComponent';\r\nimport Contact from './ContactComponent';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport { connect } from 'react-redux';\r\nimport { Switch, Route, Redirect,withRouter} from 'react-router-dom';\r\nimport About from './AboutComponent';\r\nimport {postComment,postFeedback,fetchDishes,fetchComments,fetchPromos,fetchLeaders} from \"../redux/ActionCreators\";\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\nimport { actions } from 'react-redux-form';\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    dishes: state.dishes,\r\n    comments: state.comments,\r\n    promotions: state.promotions,\r\n    leaders: state.leaders\r\n  }\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n  postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\r\n  fetchDishes: () => { dispatch(fetchDishes())},\r\n  resetFeedbackForm: () => { dispatch(actions.reset('feedback'))},\r\n  fetchComments: () => dispatch(fetchComments()),\r\n  fetchPromos: () => dispatch(fetchPromos()),\r\n  fetchLeaders: ()=> dispatch(fetchLeaders()),\r\n  postFeedback: (\r\n    firstname,\r\n    lastname,\r\n    telnum,\r\n    email,\r\n    agree,\r\n    contactType,\r\n    message\r\n  ) =>\r\n    dispatch(\r\n      postFeedback(\r\n        firstname,\r\n        lastname,\r\n        telnum,\r\n        email,\r\n        agree,\r\n        contactType,\r\n        message\r\n      )\r\n    )\r\n});\r\n\r\nclass Main extends Component {\r\n    \r\n    componentDidMount() {\r\n      this.props.fetchDishes();\r\n      this.props.fetchComments();\r\n      this.props.fetchPromos();\r\n      this.props.fetchLeaders();\r\n    }\r\n\r\nrender() {\r\n    \r\n    const HomePage = () => {\r\n        return(\r\n          <Home \r\n          dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n          dishesLoading={this.props.dishes.isLoading}\r\n          dishErrMess={this.props.dishes.errMess}\r\n          promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\r\n          promoLoading={this.props.promotions.isLoading}\r\n          promoErrMess={this.props.promotions.errMess}\r\n          leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\r\n          leaderLoading={this.props.leaders.isLoading}\r\n          leaderErrMess={this.props.leaders.errMess}\r\n      />\r\n            \r\n        );\r\n      }\r\n      const DishWithId = ({match}) => {\r\n        return(\r\n          <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]}\r\n          isLoading={this.props.dishes.isLoading}\r\n          errMess={this.props.dishes.errMess}\r\n          comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))}\r\n          commentsErrMess={this.props.comments.errMess}\r\n          postComment={this.props.postComment}\r\n          \r\n        />\r\n        );\r\n      }\r\n\r\n        return(\r\n            <div>\r\n           <Header/>\r\n           <TransitionGroup>\r\n            <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\r\n              <Switch location={this.props.location}>\r\n                  <Route path='/home' component={HomePage} />\r\n                  <Route exact path='/aboutus' component={() => <About leaders={this.props.leaders.leaders} />} />\r\n                  <Route exact path='/menu' component={() => <Menu dishes={this.props.dishes} />} />\r\n                  <Route path='/menu/:dishId' component={DishWithId} />\r\n                  <Route exact path='/contactus' component={() => <Contact resetFeedbackForm={this.props.resetFeedbackForm}   postFeedback={this.props.postFeedback}\r\n  />} />\r\n                  <Redirect to=\"/home\" />\r\n              </Switch>\r\n            </CSSTransition>\r\n          </TransitionGroup>\r\n          \r\n            <Footer/>\r\n                    \r\n                       \r\n                 </div>\r\n            \r\n\r\n\r\n        );\r\n    \r\n\r\n\r\n        }\r\n    \r\n}\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));","import * as ActionTypes from './ActionTypes';\r\n\r\n\r\nexport const Dishes = (state = {\r\n         isLoading: true,\r\n        errMess: null,\r\n        dishes:[]\r\n}, action) => {\r\n        switch (action.type) {\r\n            case ActionTypes.ADD_DISHES:\r\n                return {...state, isLoading: false, errMess: null, dishes: action.payload};\r\n    \r\n            case ActionTypes.DISHES_LOADING:\r\n                return {...state, isLoading: true, errMess: null, dishes: []};\r\n    \r\n            case ActionTypes.DISHES_FAILED:\r\n                return {...state, isLoading: false, errMess: action.payload};\r\n    \r\n            default:\r\n                return state;\r\n        }\r\n    };","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state = { errMess: null, comments:[]}, action) => {\r\n  switch (action.type) {\r\n    case ActionTypes.ADD_COMMENTS:\r\n      return {...state, errMess: null, comments: action.payload};\r\n\r\n    case ActionTypes.COMMENTS_FAILED:\r\n      return {...state, errMess: action.payload};\r\n\r\n    case ActionTypes.ADD_COMMENT:\r\n        var comment = action.payload;\r\n        \r\n        return { ...state, comments: state.comments.concat(comment)};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Leaders = (state={\r\n    isLoading:true,\r\n    errMess:null,\r\n    leaders:[]\r\n},action)=>{\r\n    switch(action.type){\r\n        case ActionTypes.ADD_LEADERS:\r\n            return{...state,isLoading:false,errMes:null, leaders: action.payload};\r\n\r\n        case ActionTypes.LEADERS_LOADING:\r\n            return{...state,isLoading:true,errMess:null,leaders:[] };\r\n\r\n            case ActionTypes.PROMOS_FAILED:\r\n                return{...state,isLoading:false ,errMess:action.payload};\r\n        default:\r\n            return state\r\n\r\n    }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (state  = { isLoading: true,\r\n                                        errMess: null,\r\n                                        promotions:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_PROMOS:\r\n        return {...state, isLoading: false, errMess: null, promotions: action.payload};\r\n\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, promotions: []}\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n          return state;\r\n      }\r\n};","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message: ''\r\n};","import React, { Component } from 'react';\nimport './App.css';\nimport Main from './components/MainComponent';\nimport { BrowserRouter } from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport {ConfigureStore}  from './redux/ConfigureStore';\n\n\n\nconst store = ConfigureStore();\n\n\nclass App extends Component{\n \n   render(){\n       return(\n    \n  \n<Provider store={store}>\n\n\n    <BrowserRouter>\n    <div className=\"App\">\n     <Main/>\n</div>\n    </BrowserRouter>\n    </Provider>\n\n       )\n   } \n\n}\n\n  \nexport default App;\n","import {createStore, combineReducers, applyMiddleware} from 'redux';\r\nimport { Dishes } from './dishes';\r\nimport { Comments} from './comments';\r\nimport { Leaders } from './leaders';\r\nimport { Promotions} from './promotions';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger'\r\nimport { createForms } from 'react-redux-form';\r\nimport { InitialFeedback } from './forms';\r\n\r\n\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n     combineReducers({\r\n        dishes: Dishes,\r\n        comments: Comments,\r\n        promotions: Promotions,\r\n        leaders: Leaders,\r\n        ...createForms({\r\n            feedback:InitialFeedback\r\n        })\r\n     }),\r\n     applyMiddleware(thunk,logger)\r\n    );\r\n\r\n    return store;\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}